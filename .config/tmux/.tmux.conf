# ======= Misc
bind-key R source-file ~/.config/tmux/tmux.conf \; display-message "tmux reloaded"
set-option -g default-terminal screen-256color
set-option -ga terminal-overrides ",xterm-256color:Tc"

set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

set-option -g default-shell /opt/homebrew/bin/fish

set -g status-keys emacs
setw -g mode-keys vi
set -g repeat-time 1000

set -g base-index 1
set -g mouse on
set -g focus-events on

set -sg escape-time 10

set-option -g status on

set-window-option -g other-pane-height 20
set-window-option -g other-pane-width 80

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

set-option -g status-right '#{?window_zoomed_flag,ZOOM | ,}#{session_name}:#{window_index}.#{pane_index} | #(wtfs tmux)'

setw -g aggressive-resize on
set -g pane-border-style fg=purple
set -g pane-active-border-style fg=magenta

# [nightfox]
# bg = "#abb1bb"
# fg = "#232831"
# active_pane_border = "#81a1c1"

# set -g status "on"
# set -g status-justify "left"
# set -g status-left-length "30"
# set -g status-right-length "50"
# setw -g window-status-separator ""
# set -g status-left-style NONE
# set -g status-right-style NONE
# # Style: nordfox
# set -g mode-style "fg=#232831,bg=#abb1bb"
# set -g message-style "fg=#232831,bg=#abb1bb"
# set -g message-command-style "fg=#232831,bg=#abb1bb"
# set -g pane-border-style "fg=#abb1bb"
# set -g pane-active-border-style "fg=#81a1c1"
# set -g status-style "fg=#abb1bb,bg=#232831"
# set -g status-left "#[fg=#232831,bg=#81a1c1,bold] #S #[fg=#81a1c1,bg=#232831,nobold,nounderscore,noitalics]|"
# set -g status-right "#[fg=#232831,bg=#232831,nobold,nounderscore,noitalics]}#[fg=#81a1c1,bg=#232831] #{prefix_highlight} #[fg=#abb1bb,bg=#232831,nobold,nounderscore,noitalics]#[fg=#232831,bg=#abb1bb] %Y-%m-%d  %I:%M %p #[fg=#81a1c1,bg=#abb1bb,nobold,nounderscore,noitalics]#[fg=#232831,bg=#81a1c1,bold] #h "
# setw -g window-status-activity-style "underscore,fg=#7e8188,bg=#232831"
# setw -g window-status-style "NONE,fg=#7e8188,bg=#232831"
# setw -g window-status-format "#[fg=#232831,bg=#232831,nobold,nounderscore,noitalics]#[default] #I  #W #F #[fg=#232831,bg=#232831,nobold,nounderscore,noitalics]|"
# setw -g window-status-current-format "#[fg=#232831,bg=#abb1bb,nobold,nounderscore,noitalics]|#[fg=#232831,bg=#abb1bb,bold] #I #W #F #[fg=#abb1bb,bg=#232831,nobold,nounderscore,noitalics]|"

# [twilight]
# bg = "#1e1e1e"
# fg = "#d4d4d4"
# active_pane_border = "#44475a"

# Twilight Colors
set -g status "on"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"
setw -g window-status-separator "#[fg=#565f89] ⏐ "
set -g status-left-style NONE
set -g status-right-style NONE

# Style: twilight
set -g mode-style "fg=#5E9A00,bg=#0E373C"
set -g message-style "fg=#d4d4d4,bg=#0E373C"
set -g message-command-style "fg=#d4d4d4,bg=#1e1e1e"
set -g pane-border-style "fg=#1e1e1e"
set -g pane-active-border-style "fg=#44475a"

set -g status-style "fg=#ffff00,bg=#1e1e1e"

# set -g status-left "#[fg=#9228A3,bg=#44475a,bold] #S #[fg=#44475a,bg=#1e1e1e,nobold,nounderscore,noitalics]|"
# set -g status-right "#[fg=#1e1e1e,bg=#1e1e1e,nobold,nounderscore,noitalics]}#[fg=#44475a,bg=#1e1e1e] #{prefix_highlight} #[fg=#d4d4d4,bg=#1e1e1e,nobold,nounderscore,noitalics]#[fg=#1e1e1e,bg=#d4d4d4] %Y-%m-%d  %I:%M %p #[fg=#44475a,bg=#d4d4d4,nobold,nounderscore,noitalics]#[fg=#1e1e1e,bg=#44475a,bold] #h "
# setw -g window-status-activity-style "underscore,fg=#7e8188,bg=#1e1e1e"
# setw -g window-status-style "NONE,fg=#7e8188,bg=#1e1e1e"
# set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
# set -g window-status-current-format '#[fg=#7AADAE,bg=#0E373C]  #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F  '

# ===== Sessions
# make new
bind C-c new-session
# find
bind C-f command-prompt -p find-session 'switch-client -t %%'

# ======= Binds
bind-key r refresh-client
bind-key L clear-history

bind-key s split-window -h
bind-key v split-window -v
bind-key n next-window
bind-key b previous-window

bind-key bspace swap-window -t -1 \; select-window -t -1
bind-key space swap-window -t +1 \; select-window -t +1

bind-key x break-pane
bind-key X break-pane -d
bind-key W choose-window

bind-key q kill-pane

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# ybindings in copy mode
bind P choose-buffer
bind -T copy-mode-vi C-v send -X rectangle-toggle
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

bind -n 'C-=' resize-pane -U 10
bind -n 'C--' resize-pane -D 10
bind -n 'C-_' resize-pane -L 10
bind -n 'C-+' resize-pane -R 10
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
bind-key - select-layout even-horizontal

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-=' if-shell "$is_vim" 'send-keys C-='  'resize-pane -U 10'
bind-key -n 'C--' if-shell "$is_vim" 'send-keys C--'  'resize-pane -D 10'
bind-key -n 'C-_' if-shell "$is_vim" 'send-keys C-_'  'resize-pane -L 10'
bind-key -n 'C-+' if-shell "$is_vim" 'send-keys C-+'  'resize-pane -R 10'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind -T copy-mode-vi 'C-=' resize-pane -U 10
bind -T copy-mode-vi 'C--' resize-pane -D 10
bind -T copy-mode-vi 'C-_' resize-pane -L 10
bind -T copy-mode-vi 'C-+' resize-pane -R 10

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'jaclu/tmux-power-zoom'
set -g @plugin 'sainnhe/tmux-fzf'

set -g @sessionx-bind 'C-o'
